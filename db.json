{
  "posts": [
    {
      "id": 1,
      "title": "Getting Started with JavaScript",
      "content": "JavaScript is a versatile programming language that powers the modern web. In this comprehensive guide, we'll explore the fundamentals of JavaScript, from basic syntax to advanced concepts. Whether you're a beginner or looking to refresh your knowledge, this post will help you understand the core principles that make JavaScript such a powerful tool for web development. We'll cover variables, functions, objects, arrays, and modern ES6+ features that every developer should know.",
      "author": "Jane Developer"
    },
    {
      "id": 2,
      "title": "The Art of CSS Design",
      "content": "CSS is much more than just styling - it's an art form that brings websites to life. In this post, we'll dive deep into modern CSS techniques, including Flexbox, Grid, animations, and responsive design. Learn how to create stunning visual experiences that engage users and make your websites stand out from the crowd. We'll explore advanced selectors, pseudo-classes, and CSS custom properties that will elevate your design skills to the next level.",
      "author": "Alex Designer"
    },
    {
      "id": 3,
      "title": "Building APIs with Node.js",
      "content": "Node.js has revolutionized server-side development, making it possible to use JavaScript for both frontend and backend development. This tutorial will guide you through building robust APIs using Node.js, Express, and modern best practices. We'll cover everything from basic routing to authentication and database integration. You'll learn how to structure your code, handle errors gracefully, and implement security measures to protect your API from common vulnerabilities.",
      "author": "Sam Backend"
    },
    {
      "id": 4,
      "title": "React Hooks Deep Dive",
      "content": "React Hooks have transformed how we write React applications, making functional components more powerful than ever before. This comprehensive guide explores all the built-in hooks including useState, useEffect, useContext, and more advanced ones like useReducer and useMemo. We'll also learn how to create custom hooks to share logic between components and follow best practices for optimal performance and maintainability.",
      "author": "Emma React"
    },
    {
      "id": 5,
      "title": "Database Design Fundamentals",
      "content": "Good database design is the foundation of any successful application. In this post, we'll explore the principles of relational database design, normalization techniques, and best practices for creating efficient and scalable database schemas. We'll cover entity-relationship modeling, indexing strategies, and common pitfalls to avoid when designing your database structure. Whether you're working with MySQL, PostgreSQL, or any other relational database, these concepts will serve you well.",
      "author": "David Database"
    }
  ]
}